{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.apiURL = \"https://fakestoreapi.com/\";\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    getAll() {\n      return this.httpClient.get(this.apiURL + '/products/');\n    }\n\n    create(product) {\n      return this.httpClient.post(this.apiURL + '/products/', product);\n    }\n\n    find(id) {\n      return this.httpClient.get(this.apiURL + '/products/' + id);\n    }\n\n    update(id, product) {\n      return this.httpClient.put(this.apiURL + '/products/' + id, JSON.stringify(product), this.httpOptions);\n    }\n\n    delete(id) {\n      return this.httpClient.delete(this.apiURL + '/products/' + id, this.httpOptions).pipe(catchError(this.errorHandler));\n    }\n\n    errorHandler(error) {\n      let errorMessage = '';\n\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = error.error.message;\n      } else {\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      return throwError(errorMessage);\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}